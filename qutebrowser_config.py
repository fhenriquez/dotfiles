# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Always restore open sites when qutebrowser is reopened.
# Type: Bool
c.auto_save.session = True

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Width (in pixels) of the scrollbar in the completion window.
# Type: Int
c.completion.scrollbar.width = 10

# Directory to save downloads to. If unset, a sensible OS-specific
# default is used.
# Type: Directory
c.downloads.location.directory = '~/Downloads'

# Prompt the user for the download location. If set to false,
# `downloads.location.directory` will be used.
# Type: Bool
c.downloads.location.prompt = False

# Remember the last used download directory.
# Type: Bool
c.downloads.location.remember = False

# Where to show the downloaded files.
# Type: VerticalPosition
# Valid values:
#   - top
#   - bottom
c.downloads.position = 'bottom'

# Editor (and arguments) to use for the `open-editor` command. The
# following placeholders are defined: * `{file}`: Filename of the file
# to be edited. * `{line}`: Line in which the caret is found in the
# text. * `{column}`: Column in which the caret is found in the text. *
# `{line0}`: Same as `{line}`, but starting from index 0. * `{column0}`:
# Same as `{column}`, but starting from index 0.
# Type: ShellCommand
c.editor.command = ['vim "{}"']

# CSS border value for hints.
# Type: String
c.hints.border = '3px solid #E3BE23'

# Scatter hint key chains (like Vimium) or not (like dwb). Ignored for
# number hints.
# Type: Bool
c.hints.scatter = False

# Open new tabs (middleclick/ctrl+click) in the background.
# Type: Bool
c.tabs.background = True

# When to show favicons in the tab bar.
# Type: String
# Valid values:
#   - always: Always show favicons.
#   - never: Always hide favicons.
#   - pinned: Show favicons only on pinned tabs.
c.tabs.favicons.show = 'pinned'

# Position of the tab bar.
# Type: Position
# Valid values:
#   - top
#   - bottom
#   - left
#   - right
c.tabs.position = 'top'

# When to show the tab bar.
# Type: String
# Valid values:
#   - always: Always show the tab bar.
#   - never: Always hide the tab bar.
#   - multiple: Hide the tab bar if only one tab is open.
#   - switching: Show the tab bar when switching tabs.
c.tabs.show = 'multiple'

# Alignment of the text inside of tabs.
# Type: TextAlignment
# Valid values:
#   - left
#   - right
#   - center
c.tabs.title.alignment = 'left'

# Format to use for the tab title. The following placeholders are
# defined:  * `{perc}`: Percentage as a string like `[10%]`. *
# `{perc_raw}`: Raw percentage, e.g. `10`. * `{title}`: Title of the
# current web page. * `{title_sep}`: The string ` - ` if a title is set,
# empty otherwise. * `{index}`: Index of this tab. * `{id}`: Internal
# tab ID of this tab. * `{scroll_pos}`: Page scroll position. *
# `{host}`: Host of the current web page. * `{backend}`: Either
# ''webkit'' or ''webengine'' * `{private}`: Indicates when private mode
# is enabled. * `{current_url}`: URL of the current web page. *
# `{protocol}`: Protocol (http/https/...) of the current web page. *
# `{audio}`: Indicator for audio/mute status.
# Type: FormatString
c.tabs.title.format = '{index}: {private} {audio} {title}'

# Width (in pixels or as percentage of the window) of the tab bar if
# it's vertical.
# Type: PercOrInt
c.tabs.width = 40

# Maximum width (in pixels) of tabs (-1 for no maximum). This setting
# only applies when tabs are horizontal. This setting does not apply to
# pinned tabs, unless `tabs.pinned.shrink` is False. This setting may
# not apply properly if max_width is smaller than the minimum size of
# tab contents, or smaller than tabs.min_width.
# Type: Int
c.tabs.max_width = -1

# Search engines which can be used via the address bar. Maps a search
# engine name (such as `DEFAULT`, or `ddg`) to a URL with a `{}`
# placeholder. The placeholder will be replaced by the search term, use
# `{{` and `}}` for literal `{`/`}` signs. The search engine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was entered to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {'DEFAULT': 'https://duckduckgo.com/?q={}'}
c.url.searchengines['ddgi'] = 'https://duckduckgo.com/?q={}&iax=images&ia=images#'
c.url.searchengines['reddit'] = 'https://www.reddit.com/r/{}'
c.url.searchengines['r'] = 'https://www.reddit.com/r/{}'
c.url.searchengines['google'] =  'https://www.google.com/search?q={}'
c.url.searchengines['g'] =  'https://www.google.com/search?q={}'
c.url.searchengines['yt'] = 'https://www.youtube.com/results?search_query={}'
c.url.searchengines['wiki'] = 'https://en.wikipedia.org/?search={}'

# Default zoom level.
# Type: Perc
c.zoom.default = '125%'

# Text color of the completion widget. May be a single color to use for
# all columns or a list of three colors, one for each column.
# Type: List of QtColor, or QtColor
c.colors.completion.fg = 'yellow'

# Background color of the completion widget for odd rows.
# Type: QssColor
c.colors.completion.odd.bg = 'black'

# Background color of the completion widget for even rows.
# Type: QssColor
c.colors.completion.even.bg = 'black'

# Foreground color of completion widget category headers.
# Type: QtColor
c.colors.completion.category.fg = 'purple'

# Background color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.bg = 'black'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.top = 'purple'

# Bottom border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.bottom = 'blue'

# Foreground color of the selected completion item.
# Type: QtColor
c.colors.completion.item.selected.fg = 'purple'

# Background color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.bg = 'gray'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.item.selected.border.top = 'gray'

# Bottom border color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.border.bottom = '#464646'

# Foreground color of the matched text in the completion.
# Type: QssColor
c.colors.completion.match.fg = 'blue'

# Color of the scrollbar handle in the completion view.
# Type: QssColor
c.colors.completion.scrollbar.fg = '#464646'

# Color of the scrollbar in the completion view.
# Type: QssColor
c.colors.completion.scrollbar.bg = '#F7F7F7'

# Background color for the download bar.
# Type: QssColor
c.colors.downloads.bar.bg = '#E3E3E3'

# Color gradient start for download text.
# Type: QtColor
c.colors.downloads.start.fg = '#464646'

# Color gradient start for download backgrounds.
# Type: QtColor
c.colors.downloads.start.bg = '#F7F7F7'

# Color gradient end for download text.
# Type: QtColor
c.colors.downloads.stop.fg = '#525252'

# Color gradient stop for download backgrounds.
# Type: QtColor
c.colors.downloads.stop.bg = '#B9B9B9'

# Font color for hints.
# Type: QssColor
c.colors.hints.fg = 'blue'

# Background color for hints. Note that you can use a `rgba(...)` value
# for transparency.
# Type: QssColor
c.colors.hints.bg = 'yellow'

# Font color for the matched part of hints.
# Type: QssColor
c.colors.hints.match.fg = 'red'

# Foreground color of an error message.
# Type: QssColor
c.colors.messages.error.fg = '#525252'

# Background color of an error message.
# Type: QssColor
c.colors.messages.error.bg = '#B9B9B9'

# Foreground color of a warning message.
# Type: QssColor
c.colors.messages.warning.fg = '#525252'

# Background color of a warning message.
# Type: QssColor
c.colors.messages.warning.bg = '#B9B9B9'

# Foreground color of an info message.
# Type: QssColor
c.colors.messages.info.fg = '#464646'

# Background color of an info message.
# Type: QssColor
c.colors.messages.info.bg = '#F7F7F7'

# Foreground color for prompts.
# Type: QssColor
c.colors.prompts.fg = 'white'

# Foreground color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.fg = 'yellow'

# Foreground color of the URL in the statusbar on successful load
# (http).
# Type: QssColor
c.colors.statusbar.url.success.http.fg = 'blue'

# Foreground color of the URL in the statusbar on successful load
# (https).
# Type: QssColor
c.colors.statusbar.url.success.https.fg = 'blue'

# Background color of the tab bar.
# Type: QtColor
c.colors.tabs.bar.bg = 'black'

# Foreground color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.fg = 'yellow'

# Background color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.bg = 'black'

# Foreground color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.fg = 'yellow'

# Background color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.bg = 'black'

# Foreground color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.fg = 'blue'

# Background color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.bg = 'gray'

# Foreground color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.fg = 'blue'

# Background color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.bg = 'gray'

# Font used in the completion widget.
# Type: Font
c.fonts.completion.entry = '12pt monospace'

# Font used in the completion categories.
# Type: Font
c.fonts.completion.category = 'bold 12pt monospace'

# Font used for the hints.
# Type: Font
c.fonts.hints = 'bold 12pt monospace'

# Font used for prompts.
# Type: Font
c.fonts.prompts = '12pt sans-serif'

# Font used in the statusbar.
# Type: Font
c.fonts.statusbar = '12pt Terminal'

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs = '12pt monospace'

# Bindings for normal mode
config.bind(';w', 'set downloads.location.directory ~/Pictures/wallpapers;; hint links download')
config.bind('I', 'config-source')
config.bind('wc', 'config-write.py --force')
config.bind('gd', 'set downloads.location.directory ~/Downloads;; download')
config.bind('K', 'tab-next')
config.bind('J', 'tab-prev')
